version: "3.5"

volumes:
  cra_postgresdata:
  mavencache:

networks:
  default:
    name: appnetwork
    ipam:
      config:
        - subnet: ${SUBNET}

services:
  postgres:
    container_name: postgres
    restart: unless-stopped
    image: postgres:16.0-alpine
    hostname: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - cra_postgresdata:/var/lib/postgresql/data

  app:
    container_name: app
    restart: unless-stopped
    build:
      context: ./app
      dockerfile: Dockerfile.build
    hostname: app
    networks:
      default:
        ipv4_address: ${BACKEND_ADDRESS}
    volumes:
      - mavencache:/root/.m2/repository
    ports:
      - "30020:${BACKEND_PORT}"
    depends_on:
      - postgres
    environment:
      COOKIE_SECRET: "${COOKIE_SECRET}"
      SECRET_KEY: "${SECRET_KEY}"
      FRONTEND_HOST: ${FRONTEND_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      PORT: ${BACKEND_PORT}
      JDBC_URL: "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_TABLE}"
      JDBC_DEV_URL: "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_TABLE}_dev"
      JDBC_TEST_URL: "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_TABLE}_test"

  frontend:
    container_name: frontend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile.build
    hostname: frontend
    networks:
      default:
        ipv4_address: ${FRONTEND_ADDRESS}
    ports:
      - "30010:${FRONTEND_PORT}"
    environment:
      BACKEND_HOST: ${BACKEND_HOST}
      PORT: ${FRONTEND_PORT}
